#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;

// Output data ; will be interpolated for each fragment.
out vec2 UV;
uniform vec2 topleft;
// const vec2 topleft = vec2(-1, -1);

void main(){
  gl_Position = vec4(vertexPosition_modelspace,1) + vec4(topleft, 0, 0);
  UV = (vertexPosition_modelspace.xy);
  // UV = vec2(1.0 - vertexPosition_modelspace.x, vertexPosition_modelspace.y);
  // UV = vec2(1.0 - vertexPosition_modelspace.x, vertexPosition_modelspace.y);
}
