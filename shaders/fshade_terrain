#version 330 core

// Interpolated values from the vertex shaders
in vec2 UV;
in vec3 vBC;
in vec3 color_magna;

// Output data
layout(location = 0) out vec3 color;

// Values that stay constant for the whole mesh.
uniform sampler2D DiffuseTextureSampler;
uniform sampler2D NormalTextureSampler;
uniform sampler2D SpecularTextureSampler;

void main(){
  // Light emission properties.
  vec3 LightColor = vec3(1, 1, 1);
  float LightPower = 1.0;
  
  // Material properties
  vec3 MaterialDiffuseColor = texture(DiffuseTextureSampler, UV).rgb;
  // vec3 MaterialSpecularColor = texture(SpecularTextureSampler, UV).rgb * 0.3;
  vec3 MaterialAmbientColor = vec3(0.5, 0.5, 0.5) * MaterialDiffuseColor;
  
  // color = MaterialAmbientColor;
  // color = vec3(0.7, 0.7, 0.7);

  if(any(lessThan(vBC, vec3(0.02)))){
    color = vec3(0.0, 0.0, 0.0);
  }
  else{
    // color = vec3(0.5, 0.5, 0.5);
    color = vBC;
  }

  color = 0.8 * color_magna + 0.2 * color;
}
