#version 330 core

in FragData {
  vec3 position;
  vec2 UV;
  vec3 normal;
  vec3 barycentric;
} in_data;

// Output data
layout(location = 0) out vec3 color;

// Values that stay constant for the whole mesh.
uniform mat4 MVP;
uniform mat4 V;
uniform mat4 M;
uniform mat3 MV3x3;
uniform sampler2D RockTextureSampler;
uniform vec3 rock_color;

void main() {
  // Barycentric.
  if (any(lessThan(in_data.barycentric, vec3(0.02)))){
    color = vec3(0.0, 0.0, 0.0);
  } else{
    color = vec3(0.5);
  }

  color = texture(RockTextureSampler, in_data.UV).rgb;

  // Rock color.
  color = mix(color, rock_color, 0.5);

  // Light.
  vec3 ambient_color = vec3(0.5, 0.5, 0.5) * color;
  
  vec3 light_color = vec3(1, 1, 1);
  float light_power = 1.0;

  vec4 light_direction = vec4(1, 1, 0, 0);
  vec3 light_cameraspace = (V * M * light_direction).xyz;

  // Normal.
  vec3 n = normalize(in_data.normal);
  vec3 l = normalize(light_cameraspace);
  float cos_theta = clamp(dot(n, l), 0, 1);
  color = ambient_color + color * light_color * light_power * cos_theta;
}
